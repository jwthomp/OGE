#Sconscript for FCollada Library for Linux
#by Veronique Laforte, Feb. 9th 2007

#Create the Environment which creates the compile and linker command lines.
env = Environment()
ifdebug = ARGUMENTS.get('debug', 0)
ifunicode = ARGUMENTS.get('unicode', 0)

#Add the compiler and linker flags and include search path
env.Append(CPPPATH = ['../../../', '../../../LibXML/include'])

#Add the macros defined for all the builds
env.Append(CPPDEFINES = ['LINUX', 'FCOLLADA_INTERNAL'])

#Add the macros and flags defined only for DEBUG, RETAIL or UNICODE
if int(ifdebug):
    env.Append(CPPDEFINES = ['_DEBUG'])
    env.Append(CCFLAGS = ['-O0', '-g'])
#    env.Append(CPPFLAGS = ['-fpermissive'])
else:
    env.Append(CPPDEFINES = ['NDEBUG', 'RETAIL'])
    env.Append(CCFLAGS = ['-O2'])
#    env.Append(CPPFLAGS = ['-fpermissive'])
if int(ifunicode):
    env.Append(CPPDEFINES = ['UNICODE'])

#List of the source code to compile, and make a library out of it
list = Split("""LibXML/catalog.c
                LibXML/chvalid.c
                LibXML/debugXML.c
                LibXML/dict.c
                LibXML/DOCBparser.c
                LibXML/encoding.c
                LibXML/entities.c
                LibXML/error.c
                LibXML/globals.c
                LibXML/hash.c
                LibXML/HTMLparser.c
                LibXML/HTMLtree.c
                LibXML/legacy.c
                LibXML/list.c
                LibXML/nanoftp.c
                LibXML/nanohttp.c
                LibXML/parser.c
                LibXML/parserInternals.c
                LibXML/pattern.c
                LibXML/relaxng.c
                LibXML/SAX.c
                LibXML/SAX2.c
                LibXML/threads.c
                LibXML/tree.c
                LibXML/uri.c
                LibXML/valid.c
                LibXML/xinclude.c
                LibXML/xlink.c
                LibXML/xmlcatalog.c
                LibXML/xmlIO.c
                LibXML/xmlmemory.c
                LibXML/xmlmodule.c
                LibXML/xmlreader.c
                LibXML/xmlregexp.c
                LibXML/xmlsave.c
                LibXML/xmlstring.c
                LibXML/xmlunicode.c
                LibXML/xmlwriter.c
                LibXML/c14n.c
                FUtils/FUPluginManager.cpp
		FUtils/FUDaeParser.cpp
                FUtils/FUUri.cpp
                FUtils/FUXmlDocument.cpp
                FUtils/FUXmlParser.cpp
                FUtils/FUFile.cpp
                FUtils/FUFileManager.cpp
                FUtils/FUFileManagerTest.cpp
                FUtils/FULogFile.cpp
                FUtils/FUStringBuilder.cpp
                FUtils/FUStringBuilderTest.cpp
                FUtils/FUStringConversion.cpp
                FUtils/FUStringConversionTest.cpp
                FUtils/FUStringTest.cpp
		FUtils/FUUniqueStringMap.cpp
                FUtils/FUUniqueStringMapTest.cpp
                FUtils/FUEventTest.cpp
                FUtils/FUFunctorTest.cpp
                FUtils/FUObject.cpp
                FUtils/FUObjectTest.cpp
                FUtils/FUObjectType.cpp
                FUtils/FUDebug.cpp
                FUtils/FUTestBed.cpp
                FUtils/FUCrc32.cpp
                FUtils/FUCrc32Test.cpp
                FUtils/FUDaeWriter.cpp
                FUtils/FUXmlWriter.cpp
                FUtils/FUBoundingBox.cpp
                FUtils/FUBoundingSphere.cpp
                FUtils/FUBoundingTest.cpp
                FUtils/FUDateTime.cpp
                FUtils/FUError.cpp
                FUtils/FUDaeEnum.cpp
                FMath/FMMatrix44.cpp
                FMath/FMAllocator.cpp
                FMath/FMVector3.cpp
                FMath/FMQuaternion.cpp
                FMath/FMColor.cpp
                FMath/FMInterpolation.cpp
                FMath/FMArrayTest.cpp
                FMath/FMMatrix33.cpp
                FMath/FMVolume.cpp
                FMath/FMTreeTest.cpp
		FMath/FMRandom.cpp
                FCDocument/FCDSceneNode.cpp
                FCDocument/FCDSceneNodeIterator.cpp
		FCDocument/FCDSceneNodeTools.cpp
                FCDocument/FCDTargetedEntity.cpp
                FCDocument/FCDTransform.cpp
                FCDocument/FCDAnimated.cpp
                FCDocument/FCDAnimation.cpp
		FCDocument/FCDAnimationKey.cpp
                FCDocument/FCDAnimationChannel.cpp
                FCDocument/FCDAnimationClip.cpp
                FCDocument/FCDAnimationClipTools.cpp
                FCDocument/FCDAnimationCurve.cpp
		FCDocument/FCDAnimationCurveTools.cpp
                FCDocument/FCDAnimationMultiCurve.cpp
                FCDocument/FCDGeometry.cpp
                FCDocument/FCDGeometryMesh.cpp
                FCDocument/FCDGeometryNURBSSurface.cpp
                FCDocument/FCDGeometryPolygons.cpp
                FCDocument/FCDGeometryPolygonsTools.cpp
                FCDocument/FCDGeometrySource.cpp
                FCDocument/FCDGeometrySpline.cpp
                FCDocument/FCDMaterial.cpp
                FCDocument/FCDEffect.cpp
                FCDocument/FCDEffectCode.cpp
                FCDocument/FCDEffectParameter.cpp
                FCDocument/FCDEffectParameterFactory.cpp
                FCDocument/FCDEffectParameterList.cpp
                FCDocument/FCDEffectParameterSampler.cpp
                FCDocument/FCDEffectParameterSurface.cpp
                FCDocument/FCDEffectPass.cpp
                FCDocument/FCDEffectPassShader.cpp
                FCDocument/FCDEffectPassState.cpp
                FCDocument/FCDEffectProfile.cpp
                FCDocument/FCDEffectProfileFX.cpp
                FCDocument/FCDEffectStandard.cpp
                FCDocument/FCDEffectTechnique.cpp
                FCDocument/FCDImage.cpp
                FCDocument/FCDTexture.cpp
                FCDocument/FCDController.cpp
		FCDocument/FCDControllerTools.cpp
                FCDocument/FCDMorphController.cpp
                FCDocument/FCDSkinController.cpp
                FCDocument/FCDCamera.cpp
                FCDocument/FCDLight.cpp
                FCDocument/FCDEmitter.cpp
		FCDocument/FCDEmitterInstance.cpp
		FCDocument/FCDEmitterObject.cpp
                FCDocument/FCDEmitterParticle.cpp
                FCDocument/FCDForceDeflector.cpp
                FCDocument/FCDForceDrag.cpp
                FCDocument/FCDForceField.cpp
                FCDocument/FCDForceGravity.cpp
                FCDocument/FCDForcePBomb.cpp
                FCDocument/FCDForceWind.cpp
                FCDocument/FCDAsset.cpp
                FCDocument/FCDObject.cpp
                FCDocument/FCDocument.cpp
                FCDocument/FCDocumentTools.cpp
                FCDocument/FCDExtra.cpp
                FCDocument/FCDExternalReference.cpp
                FCDocument/FCDExternalReferenceManager.cpp
                FCDocument/FCDPlaceHolder.cpp
                FCDocument/FCDControllerInstance.cpp
                FCDocument/FCDEmitterInstance.cpp
                FCDocument/FCDEntityInstance.cpp
                FCDocument/FCDGeometryInstance.cpp
                FCDocument/FCDMaterialInstance.cpp
                FCDocument/FCDPhysicsModelInstance.cpp
                FCDocument/FCDPhysicsRigidBodyInstance.cpp
                FCDocument/FCDPhysicsRigidBodyParameters.cpp
                FCDocument/FCDPhysicsForceFieldInstance.cpp
                FCDocument/FCDPhysicsRigidConstraintInstance.cpp
                FCDocument/FCDPhysicsAnalyticalGeometry.cpp
                FCDocument/FCDPhysicsMaterial.cpp
                FCDocument/FCDPhysicsModel.cpp
                FCDocument/FCDPhysicsRigidBody.cpp
                FCDocument/FCDPhysicsRigidConstraint.cpp
                FCDocument/FCDPhysicsScene.cpp
                FCDocument/FCDPhysicsShape.cpp
		FCDocument/FCDParticleModifier.cpp
                DLLEntry.cpp
                FCollada.cpp
		FColladaPlugin.cpp
                FCDocument/FCDEntity.cpp
                """)
if int(ifdebug):
    if int(ifunicode):
        name = 'FColladaSUD'
    else:
        name = 'FColladaSD'
else:
    if int(ifunicode):
        name = 'FColladaSUR'
    else:
        name = 'FColladaSR'

FCollada = env.Library(name, list)
 
#Specifying the name and directory of output library
env.Install('../../', FCollada)
