#Sconstruct for FCollada Library and Test executable for Linux
#by Veronique Laforte, Dec. 14th 2006
import os
import glob
import shutil
import string

ifdebug = ARGUMENTS.get('debug', 0) #Default is Retail.
ifnumber = ARGUMENTS.get('target', 0) #Default is help.
ifunicode = ARGUMENTS.get('unicode', 0) #Default is non-unicode.

os.system('chmod -R 766 Output')
os.system('chmod -R 766 ColladaTest/Output')
print "Getting directory and file permissions."

#A specific help section.
Help("""
==========================USER HELP=======================================
Type 'scons debug=x unicode=x target=1' to compile files for Linux.
    If debug=0, version of code compiled is release.
       debug=1, version of code compiled is debug.
    If unicode=0, the FCollada library built doesn't support unicode. 
    If unicode=1, the FCollada library built supports unicode.
Add '-c' at the end of the command line with target 2 or 3 to clean 
	up object files.
==========================================================================""")

if int(ifnumber) == 0:
    print "=====================ATTENTION================================="
    print "Please type 'scons -h' to see what to type in the command line."
    print "==============================================================="    

elif int(ifnumber) == 1:
    cdebug = int(ifdebug)
    cunicode = int(ifunicode)
    command1 = 'scons debug=' + str(cdebug) + ' unicode=' + str(cunicode) + ' target=2'
    command2 = 'scons debug=' + str(cdebug) + ' unicode=' + str(cunicode) + ' target=3'
    os.system('scons target=100')
    os.system(command1)
    os.system(command2)

#FCollada Library.
elif int(ifnumber) == 2:
    print 'This will build the FCollada library.'
    if int(ifdebug):
	if int(ifunicode):
	    SConscript('Sconscript', build_dir='Output/DebugUnicode/Intermediate', duplicate=0)
	else:
	    SConscript('Sconscript', build_dir='Output/Debug/Intermediate', duplicate=0)
    else:
	if int(ifunicode):
	    SConscript('Sconscript', build_dir='Output/RetailUnicode/Intermediate', duplicate=0)
	else:
	    SConscript('Sconscript', build_dir='Output/Retail/Intermediate', duplicate=0)
#FColladaTest executable
elif int(ifnumber) == 3:
    if int(ifdebug):
        if int(ifunicode):
	    SConscript('FColladaTest/Sconscript', build_dir='FColladaTest/Output/DebugUnicode/Intermediate', duplicate=0)
	else:
	    print 'WARNING: FColladaTest only works with debug, unicode version of the FCollada library.'
    else:
	print 'WARNING: FColladaTest only works with debug, unicode version of the FCollada library.'

#Figure out directories for DEBUG vs. RETAIL versions of code, with unicode.
elif int(ifnumber) == 100:
    if int(ifdebug):
        if int(ifunicode):
            stype = 'DebugUnicode'
            print "Checking and building Output Tree for ColladaTest"
            os.chdir('FColladaTest')
            if not os.path.exists('Output'): os.mkdir('Output')
            os.chdir('Output')
            if not os.path.exists(stype): os.mkdir(stype)
            os.chdir(stype)
            if not os.path.exists('Intermediate'): os.mkdir('Intermediate')
            os.chdir('../../..')
        else:
            stype = 'Debug'
    else:
        if int(ifunicode):
            stype = 'RetailUnicode'
        else:
            stype = 'Retail'
    print "Checking and building Output Tree"
    if not os.path.exists('Output'): os.mkdir('Output')
    os.chdir('Output')
    if not os.path.exists(stype): os.mkdir(stype)
    os.chdir(stype)
    if not os.path.exists('Intermediate'): os.mkdir('Intermediate')
    os.chdir('../..')


#In case target number is not in this list.
else:
    print "Target number un-recognized. Type 'scons -h' to know which targets are available."
